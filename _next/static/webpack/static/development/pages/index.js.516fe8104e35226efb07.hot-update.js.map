{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.516fe8104e35226efb07.hot-update.js","sources":["webpack:///./components/Experience/index.js"],"sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nimport { Grid, Header, List, Item } from \"semantic-ui-react\";\r\n\r\nconst ExperienceItem = ({\r\n\tchildren,\r\n\tduties,\r\n\textra,\r\n\timage,\r\n\tcompany,\r\n\tposition,\r\n\tperiod,\r\n\tprojects,\r\n\t...props\r\n}) => (\r\n    <Item className=\"experience-item\">\r\n\t\t<style jsx>{`\r\n\t\t\t.experience {\r\n\t\t\t\tmargin-top: 1em;\r\n\t\t\t}\r\n\r\n\t\t\t.meta:first-child {\r\n\t\t\t\tmargin-top: 0 !important;\r\n\t\t\t}\r\n\r\n\t\t\t.experience-item > .content > .description\r\n\t\t\t{\r\n\t\t\t\tmargin-top: 1em !important;\r\n\t\t\t}\r\n\t\t`}</style>\r\n\t\t{image && (\r\n\t\t\t<Item.Image size=\"tiny\" centered={false} src={image} />\r\n\t\t)}\r\n\t\t<Item.Content>\r\n      \t\t{period && (\r\n      \t\t\t<Item.Meta>\r\n\t      \t\t\t{period}\r\n\t      \t\t\t{position && (\r\n\t      \t\t\t\t<Fragment>\r\n\t      \t\t\t\t\t{': '}\r\n\t      \t\t\t\t\t<span style={{ fontWeight: 'bold' }}>{position}</span>\r\n\t      \t\t\t\t</Fragment>\r\n      \t\t\t\t)}\r\n\t      \t\t</Item.Meta>\r\n\t      \t)}\r\n      \t\t<Item.Header as='h3'>{company}</Item.Header>\r\n      \t\t<Item.Description>\r\n      \t\t\t{children}\r\n      \t\t\t{(duties || projects) && (\r\n      \t\t\t\t<Grid columns={(duties && projects) ? 2 : 1} divided /*relaxed*/ stackable>\r\n\t                    <Grid.Row>\r\n\t                    \t{duties && (\r\n\t\t\t                    <Grid.Column>\r\n\t\t\t                        <Header as=\"h4\">Duties</Header>\r\n\t\t\t                        <List bulleted>\r\n\t\t\t                        \t{\r\n\t\t\t                        \t\tArray.isArray(duties)\r\n\t\t\t\t                        \t\t? duties.map((e, i) => (<List.Item key={i}>{e}</List.Item>))\r\n\t\t\t\t                        \t\t: duties\r\n\t\t\t                        \t}\r\n\t\t\t                        </List>\r\n\t\t\t                    </Grid.Column>\r\n                    \t\t)}\r\n\t                    \t{projects && (\r\n\t\t\t                    <Grid.Column>\r\n\t\t\t                        <Header as=\"h4\">Projects</Header>\r\n\t\t\t                        <Item.Group>\r\n\t\t\t                        \t{\r\n\t\t\t                        \t\tArray.isArray(projects)\r\n\t\t\t\t                        \t\t? projects.map(({\r\n\t\t\t\t                        \t\t\t\timage,\r\n\t\t\t\t\t                        \t\t\tname,\r\n\t\t\t\t\t                        \t\t\turl,\r\n\t\t\t\t\t                        \t\t\tperiod,\r\n\t\t\t\t\t                        \t\t\tdescription,\r\n\t\t\t\t\t                        \t\t}) => (\r\n\t\t\t\t\t                        \t\t\t<Item key={`${period} ${name}`}>\r\n\t\t\t\t\t                        \t\t\t\t{image && (\r\n\t\t\t\t\t                        \t\t\t\t\t<Item.Image size=\"tiny\" src={image} />\r\n\t\t\t\t                        \t\t\t\t\t)}\r\n\t\t\t\t                        \t\t\t\t\t<Item.Content>\r\n\t\t\t\t                        \t\t\t\t\t\t<Item.Header\r\n\t\t\t\t                        \t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t                        \t\t\t\t\t\t\t\tfontSize: \"15px\",\r\n\t\t\t\t                        \t\t\t\t\t\t\t}}\r\n\t\t\t\t\t                        \t\t\t\t\t\t{...(url && {\r\n\t\t\t\t\t                        \t\t\t\t\t\t\tas: \"a\",\r\n\t\t\t\t\t                        \t\t\t\t\t\t\thref: url,\r\n\t\t\t\t\t                        \t\t\t\t\t\t})}\r\n\t\t\t\t\t                        \t\t\t\t\t>\r\n\t\t\t\t\t                        \t\t\t\t\t\t{name}\r\n\t\t\t\t                        \t\t\t\t\t\t</Item.Header>\r\n\t\t\t\t                        \t\t\t\t\t\t{period && (<Item.Meta>{period}</Item.Meta>)}\r\n\t\t\t\t                        \t\t\t\t\t\t{description && (<Item.Description>{description}</Item.Description>)}\r\n\t\t\t\t                        \t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t                        \t\t\t</Item>\r\n\t\t\t\t                        \t\t\t))\r\n\t\t\t\t                        \t\t: projects\r\n\t\t\t                        \t}\r\n\t\t\t                        </Item.Group>\r\n\t\t                    \t</Grid.Column>\r\n                    \t\t)}\r\n\t                    </Grid.Row>\r\n\t                </Grid>\r\n  \t\t\t\t)}\r\n      \t\t</Item.Description>\r\n      \t\t{extra && (\r\n      \t\t\t<Item.Extra>{extra}</Item.Extra>\r\n  \t\t\t)}\r\n\t\t</Item.Content>\r\n    </Item>\r\n);\r\n\r\nconst Experience = (props) => (\r\n\t<Item.Group className=\"experience\" divided {...props}>\r\n\t</Item.Group>\r\n);\r\n\r\nExperience.Item = ExperienceItem;\r\n\r\nexport default Experience;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgxBA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvGA;AACA;AA4GA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAIA;AAEA;;;;A","sourceRoot":""}